#!/usr/bin/python{# TODO: use a specified python version #}
"""
This program can be used either to run a manage.py command passed as the
first arg, or when passed "_dz_wsgi", to run a gunicorn process serving
this application.
"""

import os
import sys

# prepare project environment
os.environ['CONFIG_WRITABLE_ROOT'] = "/tmp"
os.environ['CONFIG_PG_DBNAME'] = "{{dbinfo.db_name}}"
os.environ['CONFIG_PG_USER'] = "{{dbinfo.username}}"
os.environ['CONFIG_PG_PASSWORD'] = "{{dbinfo.password}}"
os.environ['CONFIG_PG_HOST'] = "{{dbinfo.host}}"
os.environ['DJANGO_SETTINGS_MODULE'] = 'dz_settings'

# activate virtualenv
rel_bundle_dir, this_filename = os.path.split(__file__)
bundle_dir = os.path.abspath(rel_bundle_dir)
os.chdir(bundle_dir)
activate_this = os.path.join(bundle_dir,"bin","activate_this.py")
execfile(activate_this, dict(__file__=activate_this))

# instantiate a WSGI handler
from django.core.handlers.wsgi import WSGIHandler
run_wsgi = WSGIHandler()

def run_managepy():
    """
    Run as if I were the manage.py script in the context of this bundle.
    """
    sys.argv[0] = "manage.py"
    from django.core import management
    management.execute_from_command_line()

if __name__ == "__main__":
    if len(sys.argv) >= 3 and sys.argv[1] == "_dz_wsgi":
        port = int(sys.argv[2])
        gunicorn = "/usr/bin/gunicorn"
        sys.argv = [gunicorn,
                    "--name='{{bundle_name}} on :%d'" % port,
                    "--workers={{num_workers}}",
                    "--bind=0.0.0.0:%d" % port,
                    this_filename[:-len(".py")] + ":run_wsgi"]

        execfile(gunicorn, dict(__file__=gunicorn,
                                __name__="__main__"))
    else:
        run_managepy()
